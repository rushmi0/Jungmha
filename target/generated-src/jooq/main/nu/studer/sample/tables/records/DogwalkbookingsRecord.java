/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables.records;


import java.time.LocalTime;
import java.time.OffsetDateTime;

import nu.studer.sample.tables.Dogwalkbookings;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DogwalkbookingsRecord extends UpdatableRecordImpl<DogwalkbookingsRecord> implements Record9<Integer, Integer, Integer, Integer, String, LocalTime, LocalTime, LocalTime, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.dogwalkbookings.booking_id</code>.
     */
    public DogwalkbookingsRecord setBookingId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.dogwalkbookings.booking_id</code>.
     */
    public Integer getBookingId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.dogwalkbookings.walker_id</code>.
     */
    public DogwalkbookingsRecord setWalkerId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.dogwalkbookings.walker_id</code>.
     */
    public Integer getWalkerId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.dogwalkbookings.user_id</code>.
     */
    public DogwalkbookingsRecord setUserId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.dogwalkbookings.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.dogwalkbookings.dog_id</code>.
     */
    public DogwalkbookingsRecord setDogId(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.dogwalkbookings.dog_id</code>.
     */
    public Integer getDogId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.dogwalkbookings.status</code>.
     */
    public DogwalkbookingsRecord setStatus(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.dogwalkbookings.status</code>.
     */
    public String getStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.dogwalkbookings.time_start</code>.
     */
    public DogwalkbookingsRecord setTimeStart(LocalTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.dogwalkbookings.time_start</code>.
     */
    public LocalTime getTimeStart() {
        return (LocalTime) get(5);
    }

    /**
     * Setter for <code>public.dogwalkbookings.time_end</code>.
     */
    public DogwalkbookingsRecord setTimeEnd(LocalTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.dogwalkbookings.time_end</code>.
     */
    public LocalTime getTimeEnd() {
        return (LocalTime) get(6);
    }

    /**
     * Setter for <code>public.dogwalkbookings.duration</code>.
     */
    public DogwalkbookingsRecord setDuration(LocalTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.dogwalkbookings.duration</code>.
     */
    public LocalTime getDuration() {
        return (LocalTime) get(7);
    }

    /**
     * Setter for <code>public.dogwalkbookings.timestamp</code>.
     */
    public DogwalkbookingsRecord setTimestamp(OffsetDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.dogwalkbookings.timestamp</code>.
     */
    public OffsetDateTime getTimestamp() {
        return (OffsetDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, Integer, Integer, Integer, String, LocalTime, LocalTime, LocalTime, OffsetDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, Integer, Integer, Integer, String, LocalTime, LocalTime, LocalTime, OffsetDateTime> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Dogwalkbookings.DOGWALKBOOKINGS.BOOKING_ID;
    }

    @Override
    public Field<Integer> field2() {
        return Dogwalkbookings.DOGWALKBOOKINGS.WALKER_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Dogwalkbookings.DOGWALKBOOKINGS.USER_ID;
    }

    @Override
    public Field<Integer> field4() {
        return Dogwalkbookings.DOGWALKBOOKINGS.DOG_ID;
    }

    @Override
    public Field<String> field5() {
        return Dogwalkbookings.DOGWALKBOOKINGS.STATUS;
    }

    @Override
    public Field<LocalTime> field6() {
        return Dogwalkbookings.DOGWALKBOOKINGS.TIME_START;
    }

    @Override
    public Field<LocalTime> field7() {
        return Dogwalkbookings.DOGWALKBOOKINGS.TIME_END;
    }

    @Override
    public Field<LocalTime> field8() {
        return Dogwalkbookings.DOGWALKBOOKINGS.DURATION;
    }

    @Override
    public Field<OffsetDateTime> field9() {
        return Dogwalkbookings.DOGWALKBOOKINGS.TIMESTAMP;
    }

    @Override
    public Integer component1() {
        return getBookingId();
    }

    @Override
    public Integer component2() {
        return getWalkerId();
    }

    @Override
    public Integer component3() {
        return getUserId();
    }

    @Override
    public Integer component4() {
        return getDogId();
    }

    @Override
    public String component5() {
        return getStatus();
    }

    @Override
    public LocalTime component6() {
        return getTimeStart();
    }

    @Override
    public LocalTime component7() {
        return getTimeEnd();
    }

    @Override
    public LocalTime component8() {
        return getDuration();
    }

    @Override
    public OffsetDateTime component9() {
        return getTimestamp();
    }

    @Override
    public Integer value1() {
        return getBookingId();
    }

    @Override
    public Integer value2() {
        return getWalkerId();
    }

    @Override
    public Integer value3() {
        return getUserId();
    }

    @Override
    public Integer value4() {
        return getDogId();
    }

    @Override
    public String value5() {
        return getStatus();
    }

    @Override
    public LocalTime value6() {
        return getTimeStart();
    }

    @Override
    public LocalTime value7() {
        return getTimeEnd();
    }

    @Override
    public LocalTime value8() {
        return getDuration();
    }

    @Override
    public OffsetDateTime value9() {
        return getTimestamp();
    }

    @Override
    public DogwalkbookingsRecord value1(Integer value) {
        setBookingId(value);
        return this;
    }

    @Override
    public DogwalkbookingsRecord value2(Integer value) {
        setWalkerId(value);
        return this;
    }

    @Override
    public DogwalkbookingsRecord value3(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public DogwalkbookingsRecord value4(Integer value) {
        setDogId(value);
        return this;
    }

    @Override
    public DogwalkbookingsRecord value5(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public DogwalkbookingsRecord value6(LocalTime value) {
        setTimeStart(value);
        return this;
    }

    @Override
    public DogwalkbookingsRecord value7(LocalTime value) {
        setTimeEnd(value);
        return this;
    }

    @Override
    public DogwalkbookingsRecord value8(LocalTime value) {
        setDuration(value);
        return this;
    }

    @Override
    public DogwalkbookingsRecord value9(OffsetDateTime value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public DogwalkbookingsRecord values(Integer value1, Integer value2, Integer value3, Integer value4, String value5, LocalTime value6, LocalTime value7, LocalTime value8, OffsetDateTime value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DogwalkbookingsRecord
     */
    public DogwalkbookingsRecord() {
        super(Dogwalkbookings.DOGWALKBOOKINGS);
    }

    /**
     * Create a detached, initialised DogwalkbookingsRecord
     */
    public DogwalkbookingsRecord(Integer bookingId, Integer walkerId, Integer userId, Integer dogId, String status, LocalTime timeStart, LocalTime timeEnd, LocalTime duration, OffsetDateTime timestamp) {
        super(Dogwalkbookings.DOGWALKBOOKINGS);

        setBookingId(bookingId);
        setWalkerId(walkerId);
        setUserId(userId);
        setDogId(dogId);
        setStatus(status);
        setTimeStart(timeStart);
        setTimeEnd(timeEnd);
        setDuration(duration);
        setTimestamp(timestamp);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised DogwalkbookingsRecord
     */
    public DogwalkbookingsRecord(nu.studer.sample.tables.pojos.Dogwalkbookings value) {
        super(Dogwalkbookings.DOGWALKBOOKINGS);

        if (value != null) {
            setBookingId(value.getBookingId());
            setWalkerId(value.getWalkerId());
            setUserId(value.getUserId());
            setDogId(value.getDogId());
            setStatus(value.getStatus());
            setTimeStart(value.getTimeStart());
            setTimeEnd(value.getTimeEnd());
            setDuration(value.getDuration());
            setTimestamp(value.getTimestamp());
            resetChangedOnNotNull();
        }
    }
}
