/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables.pojos;


import java.io.Serializable;
import java.time.LocalTime;
import java.time.OffsetDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Dogwalkbookings implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer bookingId;
    private final Integer walkerId;
    private final Integer userId;
    private final Integer dogId;
    private final String status;
    private final LocalTime timeStart;
    private final LocalTime timeEnd;
    private final LocalTime duration;
    private final OffsetDateTime timestamp;

    public Dogwalkbookings(Dogwalkbookings value) {
        this.bookingId = value.bookingId;
        this.walkerId = value.walkerId;
        this.userId = value.userId;
        this.dogId = value.dogId;
        this.status = value.status;
        this.timeStart = value.timeStart;
        this.timeEnd = value.timeEnd;
        this.duration = value.duration;
        this.timestamp = value.timestamp;
    }

    public Dogwalkbookings(
        Integer bookingId,
        Integer walkerId,
        Integer userId,
        Integer dogId,
        String status,
        LocalTime timeStart,
        LocalTime timeEnd,
        LocalTime duration,
        OffsetDateTime timestamp
    ) {
        this.bookingId = bookingId;
        this.walkerId = walkerId;
        this.userId = userId;
        this.dogId = dogId;
        this.status = status;
        this.timeStart = timeStart;
        this.timeEnd = timeEnd;
        this.duration = duration;
        this.timestamp = timestamp;
    }

    /**
     * Getter for <code>public.dogwalkbookings.booking_id</code>.
     */
    public Integer getBookingId() {
        return this.bookingId;
    }

    /**
     * Getter for <code>public.dogwalkbookings.walker_id</code>.
     */
    public Integer getWalkerId() {
        return this.walkerId;
    }

    /**
     * Getter for <code>public.dogwalkbookings.user_id</code>.
     */
    public Integer getUserId() {
        return this.userId;
    }

    /**
     * Getter for <code>public.dogwalkbookings.dog_id</code>.
     */
    public Integer getDogId() {
        return this.dogId;
    }

    /**
     * Getter for <code>public.dogwalkbookings.status</code>.
     */
    public String getStatus() {
        return this.status;
    }

    /**
     * Getter for <code>public.dogwalkbookings.time_start</code>.
     */
    public LocalTime getTimeStart() {
        return this.timeStart;
    }

    /**
     * Getter for <code>public.dogwalkbookings.time_end</code>.
     */
    public LocalTime getTimeEnd() {
        return this.timeEnd;
    }

    /**
     * Getter for <code>public.dogwalkbookings.duration</code>.
     */
    public LocalTime getDuration() {
        return this.duration;
    }

    /**
     * Getter for <code>public.dogwalkbookings.timestamp</code>.
     */
    public OffsetDateTime getTimestamp() {
        return this.timestamp;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Dogwalkbookings other = (Dogwalkbookings) obj;
        if (this.bookingId == null) {
            if (other.bookingId != null)
                return false;
        }
        else if (!this.bookingId.equals(other.bookingId))
            return false;
        if (this.walkerId == null) {
            if (other.walkerId != null)
                return false;
        }
        else if (!this.walkerId.equals(other.walkerId))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.dogId == null) {
            if (other.dogId != null)
                return false;
        }
        else if (!this.dogId.equals(other.dogId))
            return false;
        if (this.status == null) {
            if (other.status != null)
                return false;
        }
        else if (!this.status.equals(other.status))
            return false;
        if (this.timeStart == null) {
            if (other.timeStart != null)
                return false;
        }
        else if (!this.timeStart.equals(other.timeStart))
            return false;
        if (this.timeEnd == null) {
            if (other.timeEnd != null)
                return false;
        }
        else if (!this.timeEnd.equals(other.timeEnd))
            return false;
        if (this.duration == null) {
            if (other.duration != null)
                return false;
        }
        else if (!this.duration.equals(other.duration))
            return false;
        if (this.timestamp == null) {
            if (other.timestamp != null)
                return false;
        }
        else if (!this.timestamp.equals(other.timestamp))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.bookingId == null) ? 0 : this.bookingId.hashCode());
        result = prime * result + ((this.walkerId == null) ? 0 : this.walkerId.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.dogId == null) ? 0 : this.dogId.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.timeStart == null) ? 0 : this.timeStart.hashCode());
        result = prime * result + ((this.timeEnd == null) ? 0 : this.timeEnd.hashCode());
        result = prime * result + ((this.duration == null) ? 0 : this.duration.hashCode());
        result = prime * result + ((this.timestamp == null) ? 0 : this.timestamp.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Dogwalkbookings (");

        sb.append(bookingId);
        sb.append(", ").append(walkerId);
        sb.append(", ").append(userId);
        sb.append(", ").append(dogId);
        sb.append(", ").append(status);
        sb.append(", ").append(timeStart);
        sb.append(", ").append(timeEnd);
        sb.append(", ").append(duration);
        sb.append(", ").append(timestamp);

        sb.append(")");
        return sb.toString();
    }
}
