/*
 * This file is generated by jOOQ.
 */
package org.jungmha.infra.database.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;
import org.jungmha.infra.database.tables.Dogwalkers;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DogwalkersRecord extends UpdatableRecordImpl<DogwalkersRecord> implements Record8<Integer, Integer, String, Long, String, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.dogwalkers.walker_id</code>.
     */
    public DogwalkersRecord setWalkerId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.dogwalkers.walker_id</code>.
     */
    public Integer getWalkerId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.dogwalkers.user_id</code>.
     */
    public DogwalkersRecord setUserId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.dogwalkers.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.dogwalkers.location_name</code>.
     */
    public DogwalkersRecord setLocationName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.dogwalkers.location_name</code>.
     */
    public String getLocationName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.dogwalkers.id_card_number</code>.
     */
    public DogwalkersRecord setIdCardNumber(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.dogwalkers.id_card_number</code>.
     */
    public Long getIdCardNumber() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.dogwalkers.verification</code>.
     */
    public DogwalkersRecord setVerification(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.dogwalkers.verification</code>.
     */
    public String getVerification() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.dogwalkers.price_small</code>.
     */
    public DogwalkersRecord setPriceSmall(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.dogwalkers.price_small</code>.
     */
    public Integer getPriceSmall() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.dogwalkers.price_medium</code>.
     */
    public DogwalkersRecord setPriceMedium(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.dogwalkers.price_medium</code>.
     */
    public Integer getPriceMedium() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>public.dogwalkers.price_big</code>.
     */
    public DogwalkersRecord setPriceBig(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.dogwalkers.price_big</code>.
     */
    public Integer getPriceBig() {
        return (Integer) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, Integer, String, Long, String, Integer, Integer, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, Integer, String, Long, String, Integer, Integer, Integer> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Dogwalkers.DOGWALKERS.WALKER_ID;
    }

    @Override
    public Field<Integer> field2() {
        return Dogwalkers.DOGWALKERS.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return Dogwalkers.DOGWALKERS.LOCATION_NAME;
    }

    @Override
    public Field<Long> field4() {
        return Dogwalkers.DOGWALKERS.ID_CARD_NUMBER;
    }

    @Override
    public Field<String> field5() {
        return Dogwalkers.DOGWALKERS.VERIFICATION;
    }

    @Override
    public Field<Integer> field6() {
        return Dogwalkers.DOGWALKERS.PRICE_SMALL;
    }

    @Override
    public Field<Integer> field7() {
        return Dogwalkers.DOGWALKERS.PRICE_MEDIUM;
    }

    @Override
    public Field<Integer> field8() {
        return Dogwalkers.DOGWALKERS.PRICE_BIG;
    }

    @Override
    public Integer component1() {
        return getWalkerId();
    }

    @Override
    public Integer component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getLocationName();
    }

    @Override
    public Long component4() {
        return getIdCardNumber();
    }

    @Override
    public String component5() {
        return getVerification();
    }

    @Override
    public Integer component6() {
        return getPriceSmall();
    }

    @Override
    public Integer component7() {
        return getPriceMedium();
    }

    @Override
    public Integer component8() {
        return getPriceBig();
    }

    @Override
    public Integer value1() {
        return getWalkerId();
    }

    @Override
    public Integer value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getLocationName();
    }

    @Override
    public Long value4() {
        return getIdCardNumber();
    }

    @Override
    public String value5() {
        return getVerification();
    }

    @Override
    public Integer value6() {
        return getPriceSmall();
    }

    @Override
    public Integer value7() {
        return getPriceMedium();
    }

    @Override
    public Integer value8() {
        return getPriceBig();
    }

    @Override
    public DogwalkersRecord value1(Integer value) {
        setWalkerId(value);
        return this;
    }

    @Override
    public DogwalkersRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public DogwalkersRecord value3(String value) {
        setLocationName(value);
        return this;
    }

    @Override
    public DogwalkersRecord value4(Long value) {
        setIdCardNumber(value);
        return this;
    }

    @Override
    public DogwalkersRecord value5(String value) {
        setVerification(value);
        return this;
    }

    @Override
    public DogwalkersRecord value6(Integer value) {
        setPriceSmall(value);
        return this;
    }

    @Override
    public DogwalkersRecord value7(Integer value) {
        setPriceMedium(value);
        return this;
    }

    @Override
    public DogwalkersRecord value8(Integer value) {
        setPriceBig(value);
        return this;
    }

    @Override
    public DogwalkersRecord values(Integer value1, Integer value2, String value3, Long value4, String value5, Integer value6, Integer value7, Integer value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DogwalkersRecord
     */
    public DogwalkersRecord() {
        super(Dogwalkers.DOGWALKERS);
    }

    /**
     * Create a detached, initialised DogwalkersRecord
     */
    public DogwalkersRecord(Integer walkerId, Integer userId, String locationName, Long idCardNumber, String verification, Integer priceSmall, Integer priceMedium, Integer priceBig) {
        super(Dogwalkers.DOGWALKERS);

        setWalkerId(walkerId);
        setUserId(userId);
        setLocationName(locationName);
        setIdCardNumber(idCardNumber);
        setVerification(verification);
        setPriceSmall(priceSmall);
        setPriceMedium(priceMedium);
        setPriceBig(priceBig);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised DogwalkersRecord
     */
    public DogwalkersRecord(org.jungmha.infra.database.tables.pojos.Dogwalkers value) {
        super(Dogwalkers.DOGWALKERS);

        if (value != null) {
            setWalkerId(value.getWalkerId());
            setUserId(value.getUserId());
            setLocationName(value.getLocationName());
            setIdCardNumber(value.getIdCardNumber());
            setVerification(value.getVerification());
            setPriceSmall(value.getPriceSmall());
            setPriceMedium(value.getPriceMedium());
            setPriceBig(value.getPriceBig());
            resetChangedOnNotNull();
        }
    }
}
