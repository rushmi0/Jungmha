/*
 * This file is generated by jOOQ.
 */
package org.jungmha.infra.database.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jungmha.infra.database.tables.Dogs;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DogsRecord extends UpdatableRecordImpl<DogsRecord> implements Record4<Integer, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.dogs.dog_id</code>.
     */
    public DogsRecord setDogId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.dogs.dog_id</code>.
     */
    public Integer getDogId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.dogs.dog_image</code>.
     */
    public DogsRecord setDogImage(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.dogs.dog_image</code>.
     */
    public String getDogImage() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.dogs.breed_name</code>.
     */
    public DogsRecord setBreedName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.dogs.breed_name</code>.
     */
    public String getBreedName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.dogs.size</code>.
     */
    public DogsRecord setSize(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.dogs.size</code>.
     */
    public String getSize() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Dogs.DOGS.DOG_ID;
    }

    @Override
    public Field<String> field2() {
        return Dogs.DOGS.DOG_IMAGE;
    }

    @Override
    public Field<String> field3() {
        return Dogs.DOGS.BREED_NAME;
    }

    @Override
    public Field<String> field4() {
        return Dogs.DOGS.SIZE;
    }

    @Override
    public Integer component1() {
        return getDogId();
    }

    @Override
    public String component2() {
        return getDogImage();
    }

    @Override
    public String component3() {
        return getBreedName();
    }

    @Override
    public String component4() {
        return getSize();
    }

    @Override
    public Integer value1() {
        return getDogId();
    }

    @Override
    public String value2() {
        return getDogImage();
    }

    @Override
    public String value3() {
        return getBreedName();
    }

    @Override
    public String value4() {
        return getSize();
    }

    @Override
    public DogsRecord value1(Integer value) {
        setDogId(value);
        return this;
    }

    @Override
    public DogsRecord value2(String value) {
        setDogImage(value);
        return this;
    }

    @Override
    public DogsRecord value3(String value) {
        setBreedName(value);
        return this;
    }

    @Override
    public DogsRecord value4(String value) {
        setSize(value);
        return this;
    }

    @Override
    public DogsRecord values(Integer value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DogsRecord
     */
    public DogsRecord() {
        super(Dogs.DOGS);
    }

    /**
     * Create a detached, initialised DogsRecord
     */
    public DogsRecord(Integer dogId, String dogImage, String breedName, String size) {
        super(Dogs.DOGS);

        setDogId(dogId);
        setDogImage(dogImage);
        setBreedName(breedName);
        setSize(size);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised DogsRecord
     */
    public DogsRecord(org.jungmha.infra.database.tables.pojos.Dogs value) {
        super(Dogs.DOGS);

        if (value != null) {
            setDogId(value.getDogId());
            setDogImage(value.getDogImage());
            setBreedName(value.getBreedName());
            setSize(value.getSize());
            resetChangedOnNotNull();
        }
    }
}
